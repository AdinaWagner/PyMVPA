From bb43064ab3c009e658d2a1f87505244a15c651c2 Mon Sep 17 00:00:00 2001
From: Yaroslav Halchenko <debian@onerussian.com>
Date: Tue, 17 Oct 2017 20:28:52 -0400
Subject: [PATCH 2/2] BF: excercise admonition (not sure even if we use it) --
 sphinx compatibility

---
 doc/sphinxext/exercise_directive.py | 40 +++++++++++++++++++++++++++----------
 1 file changed, 29 insertions(+), 11 deletions(-)

diff --git a/doc/sphinxext/exercise_directive.py b/doc/sphinxext/exercise_directive.py
index d0dfde0a..5721d449 100644
--- a/doc/sphinxext/exercise_directive.py
+++ b/doc/sphinxext/exercise_directive.py
@@ -8,17 +8,24 @@
 ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
 """Sphinx extension add a 'exercise' directive similar to 'seealso' and 'note'.
 
-This directive can be used to add exercize boxes to tutorials.
+This directive can be used to add exercise boxes to tutorials.
 """
 
 __docformat__ = 'restructuredtext'
 
 from sphinx import addnodes
-from sphinx.util.compat import Directive, make_admonition
+from sphinx.util.compat import Directive
+# DeprecationWarning: make_admonition is deprecated, use docutils.parsers.rst.directives.admonitions.BaseAdmonition instead
+try:
+    from sphinx.util.compat import make_admonition
+except ImportError:
+    from docutils.parsers.rst.directives.admonitions \
+        import BaseAdmonition
+    make_admonition = None
 
 from docutils import nodes
 
-class exercise(nodes.Admonition, nodes.Element):
+class excercise_node(nodes.Admonition, nodes.Element):
     pass
 
 def visit_exercise_node(self, node):
@@ -28,11 +35,25 @@ def depart_exercise_node(self, node):
     self.depart_admonition(node)
 
 
-class TaskDirective(Directive):
+if make_admonition:
+    class BaseExcerciseDirective(Directive):
+        def run(self):
+            return make_admonition(
+                exercise, self.name, ['Exercise'], self.options,
+                self.content, self.lineno, self.content_offset, self.block_text,
+                self.state, self.state_machine)
+else:
+    class BaseExcerciseDirective(BaseAdmonition):
+        def run(self):
+            return super(BaseExcerciseDirective, self).run()
+
+
+class ExcerciseDirective(BaseExcerciseDirective):
     """
-    An admonition mentioning a exercise to perform (e.g. in a tutorial).
+    An admonition mentioning an exercise to perform (e.g. in a tutorial).
     """
 
+    node_class = excercise_node
     has_content = True
     required_arguments = 0
     optional_arguments = 1
@@ -40,10 +61,7 @@ class TaskDirective(Directive):
     option_spec = {}
 
     def run(self):
-        ret = make_admonition(
-            exercise, self.name, ['Exercise'], self.options,
-            self.content, self.lineno, self.content_offset, self.block_text,
-            self.state, self.state_machine)
+        ret = super(ExcerciseDirective, self).run()
         if self.arguments:
             argnodes, msgs = self.state.inline_text(self.arguments[0],
                                                     self.lineno)
@@ -55,8 +73,8 @@ class TaskDirective(Directive):
 
 
 def setup(app):
-    app.add_node(exercise,
+    app.add_node(excercise_node,
                  html=(visit_exercise_node, depart_exercise_node),
                  latex=(visit_exercise_node, depart_exercise_node),
                  text=(visit_exercise_node, depart_exercise_node))
-    app.add_directive('exercise', TaskDirective)
+    app.add_directive('exercise', ExcerciseDirective)
-- 
2.14.1

